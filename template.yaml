AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 30
    MemorySize: 512

Resources:
  MyBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: forensic-tools-s3-bucket
        CorsConfiguration:
          CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - HEAD
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
            ExposedHeaders:
              - ETag

  MyBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${MyBucket}/*

  MyUser:
    Type: AWS::IAM::User
    Properties:
      UserName: forensic-backend-user
      Policies:
        - PolicyName: "ForensicUserPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:GetObject"
                  - "s3:GetObjectAcl"
                Resource: !Sub "arn:aws:s3:::${MyBucket}/*"

  MyAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref MyUser

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowHeaders: "'Content-Type'"
        AllowMethods: "'POST,GET,OPTIONS'"
        AllowOrigin: "'*'"

  HideTextInImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        HideImageInText:
          Type: Api
          Properties:
            Path: /hideTextInImage
            Method: POST
            RestApiId: !Ref MyApi
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:GetObject
              - s3:GetObjectAcl
            Resource: !Sub "${MyBucket.Arn}/*"
      Environment:
        Variables:
              S3_BUCKET_ARN: !GetAtt MyBucket.Arn
              BUCKET_NAME: !Ref MyBucket
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./hide_text_in_image
      DockerTag: v1

  RetrieveTextFromImageFunction:
      Type: AWS::Serverless::Function
      Properties:
        PackageType: Image
        Architectures:
          - x86_64
        Events:
          RetrieveTextFromImage:
            Type: Api
            Properties:
              Path: /retrieveTextFromImage
              Method: POST
              RestApiId: !Ref MyApi
        Environment:
          Variables:
                S3_BUCKET_ARN: !GetAtt MyBucket.Arn
      Metadata:
        Dockerfile: Dockerfile
        DockerContext: ./retrieve_text_from_image
        DockerTag: v1

  EmbedWaterMarkFunction:
      Type: AWS::Serverless::Function
      Properties:
        PackageType: Image
        Architectures:
          - x86_64
        Events:
          EmbedWaterMark:
            Type: Api
            Properties:
              Path: /embedWaterMark
              Method: POST
              RestApiId: !Ref MyApi
        Policies:
          Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:GetObject
                - s3:GetObjectAcl
              Resource: !Sub "${MyBucket.Arn}/*"
        Environment:
          Variables:
                S3_BUCKET_ARN: !GetAtt MyBucket.Arn
      Metadata:
        Dockerfile: Dockerfile
        DockerContext: ./embed_watermark
        DockerTag: v1

  ExtractWaterMarkFunction:
      Type: AWS::Serverless::Function
      Properties:
        PackageType: Image
        Architectures:
          - x86_64
        Events:
          ExtractWaterMark:
            Type: Api
            Properties:
              Path: /extractWaterMark
              Method: POST
              RestApiId: !Ref MyApi
        Environment:
          Variables:
                S3_BUCKET_ARN: !GetAtt MyBucket.Arn
      Metadata:
        Dockerfile: Dockerfile
        DockerContext: ./extract_watermark
        DockerTag: v1

  DocumentSimilarityFunction:
      Type: AWS::Serverless::Function
      Properties:
        PackageType: Image
        Architectures:
          - x86_64
        Events:
          ExtractWaterMark:
            Type: Api
            Properties:
              Path: /getDocumnetSimilarity
              Method: POST
              RestApiId: !Ref MyApi
      Metadata:
        Dockerfile: Dockerfile
        DockerContext: ./check_document_similarity
        DockerTag: v1

Outputs:
  AccessKeyId:
    Description: forensic-backend-user
    Value: !Ref MyAccessKey
  SecretAccessKey:
    Description: forensic-backend-user
    Value: !GetAtt MyAccessKey.SecretAccessKey